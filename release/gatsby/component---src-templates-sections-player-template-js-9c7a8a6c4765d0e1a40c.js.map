{"version":3,"sources":["webpack:///./src/templates/sections-player-template.js"],"names":["SecondPage","pageContext","data","composition","edges","node","fields","content","composer","performer","title","id","type","dangerouslySetInnerHTML","__html","JSON","stringify","sections","to","sheetMusicUrl","playerCss","urls","map","url","idx","href","rel","key","playerJs","src","defer","query"],"mappings":"4FAAA,sHAoCeA,UA7BI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC/B,OAAO,kBAAC,IAAD,CACCC,YAAaD,EAAKC,YAAYC,MAAM,GAAGC,KAAKC,OAAOC,QACnDC,SAAUN,EAAKM,SAASJ,MAAM,GAAGC,KAAKC,OAAOC,QAC7CE,UAAWP,EAAKO,UAAUL,MAAM,GAAGC,KAAKC,OAAOC,SAEnD,kBAAC,IAAD,CAAKG,MAAUR,EAAKC,YAAYC,MAAM,GAAGC,KAAKC,OAAOC,QAAzC,KAAqDL,EAAKM,SAASJ,MAAM,GAAGC,KAAKC,OAAOC,QAArFL,oBACUA,EAAKO,UAAUL,MAAM,GAAGC,KAAKC,OAAOC,UAG7D,+CAEI,4BAAQI,GAAG,eAAeC,KAAK,mBACvBC,wBAAyB,CAACC,OAAQC,KAAKC,UAAUf,EAAYgB,SAAU,KAAM,OAGzF,kBAAC,OAAD,CAAMC,GAAIhB,EAAKiB,cAAcf,MAAM,GAAGC,KAAKC,OAAOC,SAAlD,wBACA,kBAAC,IAAD,KACKL,EAAKkB,UAAUC,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACrB,0BAAMC,KAAMF,EAAKG,IAAI,aAAaC,IAAK,YAAcH,OAGxDtB,EAAK0B,SAASP,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACpB,4BAAQK,IAAKN,EAAKO,OAAO,EAAMH,IAAK,WAAaH,UAQ1D,IAAMO,EAAK","file":"component---src-templates-sections-player-template-js-9c7a8a6c4765d0e1a40c.js","sourcesContent":["import React from \"react\"\nimport {graphql, Link} from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Helmet from \"react-helmet\";\n\nconst SecondPage = ( {pageContext, data} ) => {\n    return <Layout\n            composition={data.composition.edges[0].node.fields.content}\n            composer={data.composer.edges[0].node.fields.content}\n            performer={data.performer.edges[0].node.fields.content}\n    >\n        <SEO title={`${data.composition.edges[0].node.fields.content} (${data.composer.edges[0].node.fields.content}), ` +\n                `performed by: ${data.performer.edges[0].node.fields.content}`} />\n        {/*<h1>{data.composition.edges[0].node.fields.content} ({data.composer.edges[0].node.fields.content})</h1>*/}\n        {/*<div><p>Performed by: {data.performer.edges[0].node.fields.content}</p></div>*/}\n        <div>\n            Initialising...\n            <script id='sectionsData' type=\"application/json\"\n                    dangerouslySetInnerHTML={{__html: JSON.stringify(pageContext.sections, null, 3)}}>\n            </script>\n        </div>\n        <Link to={data.sheetMusicUrl.edges[0].node.fields.content}>Download sheet music</Link>\n        <Helmet>\n            {data.playerCss.urls.map((url, idx) =>\n                <link href={url} rel=\"stylesheet\" key={'playerCss' + idx}/>\n            )}\n\n            {data.playerJs.urls.map((url, idx) =>\n                <script src={url} defer={true} key={'playerJs' + idx}></script>\n            )}\n        </Helmet>\n    </Layout>\n}\n\nexport default SecondPage\n\nexport const query = graphql`\n    query sectionsTemplateQuery($composerNamePath: String, $compositionNamePath: String, $performerNamePath:String, $sheetMusicUrlPath: String) {\n  playerCss {\n    urls\n  }\n  playerJs {\n    urls\n  }\n  composer: allFile(filter: {relativePath: {eq: $composerNamePath}}) {\n    edges {\n      node {\n        fields {\n          content\n        }\n      }\n    }\n  }\n  \n  composition: allFile(filter: {relativePath: {eq: $compositionNamePath}}) {\n    edges {\n      node {\n        fields {\n          content\n        }\n      }\n    }\n  }\n  \n  performer:allFile(filter: {relativePath: {eq: $performerNamePath}}) {\n    edges {\n      node {\n        fields {\n          content\n        }\n      }\n    }\n  }\n  \n  sheetMusicUrl:allFile(filter: {relativePath: {eq: $sheetMusicUrlPath}}) {\n    edges {\n      node {\n        fields {\n          content\n        }\n      }\n    }\n  }\n}\n`"],"sourceRoot":""}